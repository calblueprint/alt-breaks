(function(){var t={}.hasOwnProperty,e=function(e,i){function n(){this.constructor=e}for(var s in i)t.call(i,s)&&(e[s]=i[s]);return n.prototype=i.prototype,e.prototype=new n,e.__super__=i.prototype,e};this.Gmaps4RailsMapquest=function(t){function i(){i.__super__.constructor.apply(this,arguments),this.map_options={type:"map"},this.markers_conf={},this.mergeWithDefault("markers_conf"),this.mergeWithDefault("map_options")}return e(i,t),i.prototype.createPoint=function(t,e){return new MQA.Poi({lat:t,lng:e})},i.prototype.createLatLng=function(t,e){return{lat:t,lng:e}},i.prototype.createLatLngBounds=function(){},i.prototype.createMap=function(){var t;return t=new MQA.TileMap(document.getElementById(this.map_options.id),this.map_options.zoom,{lat:this.map_options.center_latitude,lng:this.map_options.center_longitude},this.map_options.type),MQA.withModule("zoomcontrol3",function(){return t.addControl(new MQA.LargeZoomControl3,new MQA.MapCornerPlacement(MQA.MapCorner.TOP_LEFT))}),t},i.prototype.createMarkerImage=function(){},i.prototype.createMarker=function(t){var e,i;return i=new MQA.Poi({lat:t.Lat,lng:t.Lng}),""!==t.marker_picture&&(e=new MQA.Icon(t.marker_picture,t.marker_height,t.marker_width),i.setIcon(e),null!==t.marker_anchor&&i.setBias({x:t.marker_anchor[0],y:t.marker_anchor[1]})),""!==t.shadow_picture&&(e=new MQA.Icon(t.shadow_picture,t.shadow_height,t.shadow_width),i.setShadow(e),null!==t.shadow_anchor&&i.setShadowOffset({x:t.shadow_anchor[0],y:t.shadow_anchor[1]})),this.addToMap(i),i},i.prototype.clearMarkers=function(){var t,e,i,n;for(n=[],e=0,i=markers.length;i>e;e++)t=markers[e],n.push(this.clearMarker(t));return n},i.prototype.showMarkers=function(){var t,e,i,n;for(n=[],e=0,i=markers.length;i>e;e++)t=markers[e],n.push(this.showMarker(t));return n},i.prototype.hideMarkers=function(){var t,e,i,n;for(n=[],e=0,i=markers.length;i>e;e++)t=markers[e],n.push(this.hideMarker(t));return n},i.prototype.clearMarker=function(t){return this.removeFromMap(t.serviceObject)},i.prototype.showMarker=function(){},i.prototype.hideMarker=function(){},i.prototype.extendBoundsWithMarkers=function(){var t,e,i,n,s;if(this.markers.length>=2){for(this.boundsObject=new MQA.RectLL(this.markers[0].serviceObject.latLng,this.markers[1].serviceObject.latLng),n=this.markers,s=[],e=0,i=n.length;i>e;e++)t=n[e],s.push(this.boundsObject.extend(t.serviceObject.latLng));return s}},i.prototype.createClusterer=function(){},i.prototype.clearClusterer=function(){},i.prototype.clusterize=function(){},i.prototype.createInfoWindow=function(t){return t.serviceObject.setInfoTitleHTML(t.description)},i.prototype.fitBounds=function(){return this.markers.length>=2&&this.serviceObject.zoomToRect(this.boundsObject),1===this.markers.length?this.serviceObject.setCenter(this.markers[0].serviceObject.latLng):void 0},i.prototype.centerMapOnUser=function(){return this.serviceObject.setCenter(this.userLocation)},i.prototype.addToMap=function(t){return this.serviceObject.addShape(t)},i.prototype.removeFromMap=function(t){return this.serviceObject.removeShape(t)},i.prototype.updateBoundsWithPolylines=function(){},i.prototype.updateBoundsWithPolygons=function(){},i.prototype.updateBoundsWithCircles=function(){},i.prototype.extendMapBounds=function(){},i.prototype.adaptMapToBounds=function(){return this.fitBounds()},i}(Gmaps4Rails)}).call(this);