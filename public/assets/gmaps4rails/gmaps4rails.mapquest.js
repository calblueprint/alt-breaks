(function(){var t={}.hasOwnProperty,e=function(e,n){function i(){this.constructor=e}for(var r in n)t.call(n,r)&&(e[r]=n[r]);return i.prototype=n.prototype,e.prototype=new i,e.__super__=n.prototype,e};this.Gmaps4RailsMapquest=function(t){function n(){n.__super__.constructor.apply(this,arguments),this.map_options={type:"map"},this.markers_conf={},this.mergeWithDefault("markers_conf"),this.mergeWithDefault("map_options")}return e(n,t),n.prototype.createPoint=function(t,e){return new MQA.Poi({lat:t,lng:e})},n.prototype.createLatLng=function(t,e){return{lat:t,lng:e}},n.prototype.createLatLngBounds=function(){},n.prototype.createMap=function(){var t;return t=new MQA.TileMap(document.getElementById(this.map_options.id),this.map_options.zoom,{lat:this.map_options.center_latitude,lng:this.map_options.center_longitude},this.map_options.type),MQA.withModule("zoomcontrol3",function(){return t.addControl(new MQA.LargeZoomControl3,new MQA.MapCornerPlacement(MQA.MapCorner.TOP_LEFT))}),t},n.prototype.createMarkerImage=function(){},n.prototype.createMarker=function(t){var e,n;return n=new MQA.Poi({lat:t.Lat,lng:t.Lng}),""!==t.marker_picture&&(e=new MQA.Icon(t.marker_picture,t.marker_height,t.marker_width),n.setIcon(e),null!==t.marker_anchor&&n.setBias({x:t.marker_anchor[0],y:t.marker_anchor[1]})),""!==t.shadow_picture&&(e=new MQA.Icon(t.shadow_picture,t.shadow_height,t.shadow_width),n.setShadow(e),null!==t.shadow_anchor&&n.setShadowOffset({x:t.shadow_anchor[0],y:t.shadow_anchor[1]})),this.addToMap(n),n},n.prototype.clearMarkers=function(){var t,e,n,i;for(i=[],e=0,n=markers.length;n>e;e++)t=markers[e],i.push(this.clearMarker(t));return i},n.prototype.showMarkers=function(){var t,e,n,i;for(i=[],e=0,n=markers.length;n>e;e++)t=markers[e],i.push(this.showMarker(t));return i},n.prototype.hideMarkers=function(){var t,e,n,i;for(i=[],e=0,n=markers.length;n>e;e++)t=markers[e],i.push(this.hideMarker(t));return i},n.prototype.clearMarker=function(t){return this.removeFromMap(t.serviceObject)},n.prototype.showMarker=function(){},n.prototype.hideMarker=function(){},n.prototype.extendBoundsWithMarkers=function(){var t,e,n,i,r;if(this.markers.length>=2){for(this.boundsObject=new MQA.RectLL(this.markers[0].serviceObject.latLng,this.markers[1].serviceObject.latLng),i=this.markers,r=[],e=0,n=i.length;n>e;e++)t=i[e],r.push(this.boundsObject.extend(t.serviceObject.latLng));return r}},n.prototype.createClusterer=function(){},n.prototype.clearClusterer=function(){},n.prototype.clusterize=function(){},n.prototype.createInfoWindow=function(t){return t.serviceObject.setInfoTitleHTML(t.description)},n.prototype.fitBounds=function(){return this.markers.length>=2&&this.serviceObject.zoomToRect(this.boundsObject),1===this.markers.length?this.serviceObject.setCenter(this.markers[0].serviceObject.latLng):void 0},n.prototype.centerMapOnUser=function(){return this.serviceObject.setCenter(this.userLocation)},n.prototype.addToMap=function(t){return this.serviceObject.addShape(t)},n.prototype.removeFromMap=function(t){return this.serviceObject.removeShape(t)},n.prototype.updateBoundsWithPolylines=function(){},n.prototype.updateBoundsWithPolygons=function(){},n.prototype.updateBoundsWithCircles=function(){},n.prototype.extendMapBounds=function(){},n.prototype.adaptMapToBounds=function(){return this.fitBounds()},n}(Gmaps4Rails)}).call(this);