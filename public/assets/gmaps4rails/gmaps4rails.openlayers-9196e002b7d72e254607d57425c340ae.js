(function(){var t={}.hasOwnProperty,e=function(e,i){function n(){this.constructor=e}for(var r in i)t.call(i,r)&&(e[r]=i[r]);return n.prototype=i.prototype,e.prototype=new n,e.__super__=i.prototype,e};this.Gmaps4RailsOpenlayers=function(t){function i(){i.__super__.constructor.apply(this,arguments),this.map_options={},this.mergeWithDefault("map_options"),this.markers_conf={},this.mergeWithDefault("markers_conf"),this.openMarkers=null,this.markersLayer=null,this.markersControl=null,this.polylinesLayer=null}return e(i,t),i.prototype.createPoint=function(){},i.prototype.createLatLng=function(t,e){return new OpenLayers.LonLat(e,t).transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"))},i.prototype.createAnchor=function(t){return null===t?null:new OpenLayers.Pixel(t[0],t[1])},i.prototype.createSize=function(t,e){return new OpenLayers.Size(t,e)},i.prototype.createLatLngBounds=function(){return new OpenLayers.Bounds},i.prototype.createMap=function(){var t;return t=new OpenLayers.Map(this.map_options.id),t.addLayer(new OpenLayers.Layer.OSM),t.setCenter(this.createLatLng(this.map_options.center_latitude,this.map_options.center_longitude),this.map_options.zoom),t},i.prototype.createMarker=function(t){var e,i;return i=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]),i.fillOpacity=1,null===this.markersLayer&&(this.markersLayer=new OpenLayers.Layer.Vector("Markers",null),this.serviceObject.addLayer(this.markersLayer),this.markersLayer.events.register("featureselected",this.markersLayer,this.onFeatureSelect),this.markersLayer.events.register("featureunselected",this.markersLayer,this.onFeatureUnselect),this.markersControl=new OpenLayers.Control.SelectFeature(this.markersLayer),this.serviceObject.addControl(this.markersControl),this.markersControl.activate()),""===t.marker_picture?(i.graphicHeight=30,i.externalGraphic="http://openlayers.org/dev/img/marker-blue.png"):(i.graphicWidth=t.marker_width,i.graphicHeight=t.marker_height,i.externalGraphic=t.marker_picture,null!==t.marker_anchor&&(i.graphicXOffset=t.marker_anchor[0],i.graphicYOffset=t.marker_anchor[1]),""!==t.shadow_picture&&(i.backgroundGraphic=t.shadow_picture,i.backgroundWidth=t.shadow_width,i.backgroundHeight=t.shadow_height,null!==t.shadow_anchor&&(i.backgroundXOffset=t.shadow_anchor[0],i.backgroundYOffset=t.shadow_anchor[1]))),i.graphicTitle=t.marker_title,e=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.Lng,t.Lat),null,i),e.geometry.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.markersLayer.addFeatures([e]),e},i.prototype.clearMarkers=function(){return this.clearMarkersLayerIfExists(),this.markersLayer=null,this.boundsObject=new OpenLayers.Bounds},i.prototype.clearMarkersLayerIfExists=function(){return null!==this.markersLayer&&null!==this.serviceObject.getLayer(this.markersLayer.id)?this.serviceObject.removeLayer(this.markersLayer):void 0},i.prototype.extendBoundsWithMarkers=function(){var t,e,i,n,r;for(console.log("here"),n=this.markers,r=[],e=0,i=n.length;i>e;e++)t=n[e],r.push(this.boundsObject.extend(this.createLatLng(t.lat,t.lng)));return r},i.prototype.createClusterer=function(t){var e,i,n,r,s;return n={pointRadius:"${radius}",fillColor:"#ffcc66",fillOpacity:.8,strokeColor:"#cc6633",strokeWidth:"${width}",strokeOpacity:.8},i={context:{width:function(t){var e;return null!=(e=t.cluster)?e:{2:1}},radius:function(t){var e;return e=2,t.cluster&&(e=Math.min(t.attributes.count,7)+2),e}}},s=new OpenLayers.Style(n,i),r=new OpenLayers.Strategy.Cluster,e=new OpenLayers.Layer.Vector("Clusters",{strategies:[r],styleMap:new OpenLayers.StyleMap({"default":s,select:{fillColor:"#8aeeef",strokeColor:"#32a8a9"}})}),this.clearMarkersLayerIfExists(),this.serviceObject.addLayer(e),e.addFeatures(t),e},i.prototype.clusterize=function(){var t,e,i,n,r;if(this.markers_conf.do_clustering===!0){for(null!==this.markerClusterer&&this.clearClusterer(),e=new Array,r=this.markers,i=0,n=r.length;n>i;i++)t=r[i],e.push(t.serviceObject);return this.markerClusterer=this.createClusterer(e)}},i.prototype.clearClusterer=function(){return this.serviceObject.removeLayer(this.markerClusterer)},i.prototype.createInfoWindow=function(t){return null!=t.description?t.serviceObject.infoWindow=t.description:void 0},i.prototype.onPopupClose=function(){return this.markersControl.unselect(this.feature)},i.prototype.onFeatureSelect=function(t){var e,i;return e=t.feature,i=new OpenLayers.Popup.FramedCloud("featurePopup",e.geometry.getBounds().getCenterLonLat(),new OpenLayers.Size(300,200),e.infoWindow,null,!0,this.onPopupClose),e.popup=i,i.feature=e,this.map.addPopup(i)},i.prototype.onFeatureUnselect=function(t){var e;return e=t.feature,e.popup?(this.map.removePopup(e.popup),e.popup.destroy(),e.popup=null):void 0},i.prototype.create_polyline=function(t){var e,i,n,r,s,o,a,l,c,h,u,p;for(null===this.polylinesLayer&&(this.polylinesLayer=new OpenLayers.Layer.Vector("Polylines",null),this.serviceObject.addLayer(this.polylinesLayer),this.polylinesLayer.events.register("featureselected",this.polylinesLayer,this.onFeatureSelect),this.polylinesLayer.events.register("featureunselected",this.polylinesLayer,this.onFeatureUnselect),this.polylinesControl=new OpenLayers.Control.DrawFeature(this.polylinesLayer,OpenLayers.Handler.Path),this.serviceObject.addControl(this.polylinesControl)),o=[],u=0,p=t.length;p>u;u++)i=t[u],i===t[0]&&(a=i.strokeColor||this.polylines_conf.strokeColor,l=i.strokeOpacity||this.polylines_conf.strokeOpacity,c=i.strokeWeight||this.polylines_conf.strokeWeight,e=i.clickable||this.polylines_conf.clickable,h=i.zIndex||this.polylines_conf.zIndex),null!=i.lat&&null!=i.lng&&(n=new OpenLayers.Geometry.Point(i.lng,i.lat),o.push(n));return r=new OpenLayers.Geometry.LineString(o),s={strokeColor:a,strokeOpacity:l,strokeWidth:c},t=new OpenLayers.Feature.Vector(r,null,s),t.geometry.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.polylinesLayer.addFeatures([t]),t},i.prototype.updateBoundsWithPolylines=function(){},i.prototype.updateBoundsWithPolygons=function(){},i.prototype.updateBoundsWithCircles=function(){},i.prototype.fitBounds=function(){return this.serviceObject.zoomToExtent(this.boundsObject,!0)},i.prototype.centerMapOnUser=function(){return this.serviceObject.setCenter(this.userLocation)},i.prototype.extendMapBounds=function(){},i.prototype.adaptMapToBounds=function(){return this.fitBounds()},i}(Gmaps4Rails)}).call(this);